;buildInfoPackage: chisel3, version: 3.2-20191106-SNAPSHOT, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit HandShake : 
  module HandShake : 
    output io : {flip mclk : Clock, flip m_nrst : AsyncReset, flip sclk : Clock, flip s_nrst : AsyncReset, flip mval : UInt<1>, mack : UInt<1>, flip mdata : UInt<32>, sval : UInt<1>, flip sack : UInt<1>, sdata : UInt<32>}
    
    wire req_mclk : UInt @[HandShake.scala 27:22]
    wire ack_sclk : UInt @[HandShake.scala 28:22]
    reg _T : UInt, io.mclk @[HandShake.scala 33:29]
    _T <= ack_sclk @[HandShake.scala 33:29]
    reg _T_1 : UInt, io.mclk @[HandShake.scala 34:30]
    _T_1 <= _T @[HandShake.scala 34:30]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[HandShake.scala 35:23]
    reg _T_3 : UInt<2>, io.mclk with : (reset => (io.s_nrst, UInt<2>("h00"))) @[HandShake.scala 36:27]
    node _T_4 = eq(UInt<2>("h00"), _T_3) @[Conditional.scala 37:30]
    when _T_4 : @[Conditional.scala 40:58]
      _T_3 <= UInt<2>("h01") @[HandShake.scala 39:17]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_5 = eq(UInt<2>("h01"), _T_3) @[Conditional.scala 37:30]
      when _T_5 : @[Conditional.scala 39:67]
        node _T_6 = eq(io.mval, UInt<1>("h01")) @[HandShake.scala 42:22]
        when _T_6 : @[HandShake.scala 42:30]
          _T_3 <= UInt<2>("h02") @[HandShake.scala 43:19]
          skip @[HandShake.scala 42:30]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_7 = eq(UInt<2>("h02"), _T_3) @[Conditional.scala 37:30]
        when _T_7 : @[Conditional.scala 39:67]
          node _T_8 = eq(io.mval, UInt<1>("h00")) @[HandShake.scala 46:14]
          when _T_8 : @[HandShake.scala 46:23]
            _T_3 <= UInt<2>("h01") @[HandShake.scala 47:19]
            skip @[HandShake.scala 46:23]
          else : @[HandShake.scala 48:37]
            node _T_9 = eq(_T_1, UInt<1>("h01")) @[HandShake.scala 48:30]
            when _T_9 : @[HandShake.scala 48:37]
              _T_3 <= UInt<2>("h03") @[HandShake.scala 49:19]
              skip @[HandShake.scala 48:37]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_10 = eq(UInt<2>("h03"), _T_3) @[Conditional.scala 37:30]
          when _T_10 : @[Conditional.scala 39:67]
            when _T_2 : @[HandShake.scala 53:26]
              _T_3 <= UInt<2>("h01") @[HandShake.scala 54:19]
              skip @[HandShake.scala 53:26]
            skip @[Conditional.scala 39:67]
    node _T_11 = eq(_T_3, UInt<2>("h01")) @[HandShake.scala 58:26]
    node _T_12 = eq(io.mval, UInt<1>("h01")) @[HandShake.scala 58:53]
    node _T_13 = and(_T_11, _T_12) @[HandShake.scala 58:42]
    node _T_14 = eq(_T_3, UInt<2>("h02")) @[HandShake.scala 59:30]
    node _T_15 = eq(_T_1, UInt<1>("h00")) @[HandShake.scala 59:50]
    node _T_16 = and(_T_14, _T_15) @[HandShake.scala 59:46]
    node _T_17 = or(_T_13, _T_16) @[HandShake.scala 58:61]
    req_mclk <= _T_17 @[HandShake.scala 58:14]
    node _T_18 = eq(_T_3, UInt<2>("h02")) @[HandShake.scala 61:25]
    node _T_19 = eq(_T_1, UInt<1>("h01")) @[HandShake.scala 61:55]
    node _T_20 = and(_T_18, _T_19) @[HandShake.scala 61:41]
    io.mack <= _T_20 @[HandShake.scala 61:13]
    reg _T_21 : UInt<2>, io.sclk with : (reset => (io.s_nrst, UInt<2>("h00"))) @[HandShake.scala 67:27]
    reg _T_22 : UInt, io.sclk @[HandShake.scala 68:28]
    _T_22 <= req_mclk @[HandShake.scala 68:28]
    reg _T_23 : UInt, io.sclk @[HandShake.scala 69:30]
    _T_23 <= _T_22 @[HandShake.scala 69:30]
    node _T_24 = eq(UInt<2>("h00"), _T_21) @[Conditional.scala 37:30]
    when _T_24 : @[Conditional.scala 40:58]
      _T_21 <= UInt<2>("h01") @[HandShake.scala 72:17]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_25 = eq(UInt<2>("h01"), _T_21) @[Conditional.scala 37:30]
      when _T_25 : @[Conditional.scala 39:67]
        node _T_26 = eq(_T_23, UInt<1>("h01")) @[HandShake.scala 75:24]
        when _T_26 : @[HandShake.scala 75:31]
          _T_21 <= UInt<2>("h02") @[HandShake.scala 75:40]
          skip @[HandShake.scala 75:31]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_27 = eq(UInt<2>("h02"), _T_21) @[Conditional.scala 37:30]
        when _T_27 : @[Conditional.scala 39:67]
          node _T_28 = eq(io.sack, UInt<1>("h01")) @[HandShake.scala 78:22]
          when _T_28 : @[HandShake.scala 78:31]
            _T_21 <= UInt<2>("h03") @[HandShake.scala 78:40]
            skip @[HandShake.scala 78:31]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_29 = eq(UInt<2>("h03"), _T_21) @[Conditional.scala 37:30]
          when _T_29 : @[Conditional.scala 39:67]
            node _T_30 = eq(_T_23, UInt<1>("h00")) @[HandShake.scala 81:14]
            when _T_30 : @[HandShake.scala 81:27]
              _T_21 <= UInt<2>("h01") @[HandShake.scala 81:36]
              skip @[HandShake.scala 81:27]
            skip @[Conditional.scala 39:67]
    node _T_31 = eq(_T_21, UInt<2>("h02")) @[HandShake.scala 84:25]
    node _T_32 = eq(_T_21, UInt<2>("h01")) @[HandShake.scala 84:54]
    node _T_33 = eq(_T_23, UInt<1>("h01")) @[HandShake.scala 84:84]
    node _T_34 = and(_T_32, _T_33) @[HandShake.scala 84:70]
    node _T_35 = or(_T_31, _T_34) @[HandShake.scala 84:41]
    io.sval <= _T_35 @[HandShake.scala 84:13]
    node _T_36 = eq(_T_21, UInt<2>("h03")) @[HandShake.scala 85:26]
    node _T_37 = eq(_T_23, UInt<1>("h01")) @[HandShake.scala 85:58]
    node _T_38 = and(_T_36, _T_37) @[HandShake.scala 85:43]
    ack_sclk <= _T_38 @[HandShake.scala 85:14]
    io.sdata <= io.mdata @[HandShake.scala 88:12]
    
